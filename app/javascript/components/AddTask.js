import React from "react";
import { navigate } from "@reach/router";
import { Formik, Field, Form } from "formik";
import './main.css';

function AddTask() {
  const handleSubmit = values => {
    const requestTasks = async () => {
      // We get the CSRF token generated by Rails to send it
      // as a header in the request to create a new post.
      // This is needed because with this token, Rails is going to
      // recognize the request as a valid request
      const csrfToken = document.querySelector("meta[name=csrf-token]").content;
      const response = await fetch("/api/todo", {
        method: "POST",
        credentials: "include",
        headers: {
          "Content-Type": "application/vnd.api+json",
          "X-CSRF-Token": csrfToken
        },
        body: JSON.stringify({ data: values })
      });
      if (response.status === 201) {
        window.history.back();
      }
    };
    requestTasks();
  };

  return (
    <div class="new-task-form-container">
      <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous" />
      <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
      <h2 class="new-task-header">Add your task</h2>
      <Formik
          initialValues={{
            type: "todos",
            attributes: {
              body: "",
              status: "not-done",
              tag: ""
            }
          }}
          onSubmit={handleSubmit}
          >
          {(props) => (
            <form onSubmit={props.handleSubmit}>
            <label>Description:</label>
            <input class="form-control" type="text" name="attributes.body" onChange={props.handleChange} />
            <br />
            <label>Tag:</label>
            <input class="form-control" type="text" name="attributes.tag" onChange={props.handleChange} />
            <br />
            <div class="new-task-form-button">
              <button class="btn btn-outline-primary" type="submit">Add</button>
              <button class="btn btn-outline-secondary" type="button" onClick={() => window.history.back()}>Go back</button>
            </div>
            {props.errors.name && <div id="feedback">{props.errors.name}</div>}
          </form>
          )}
    </Formik>
    </div>
  );
}

export default AddTask;